library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity TB_ClockDivider_1Hz is
end entity TB_ClockDivider_1Hz;

architecture test of TB_ClockDivider_1Hz is

    signal Clk      : std_logic := '0';
    signal Reset    : std_logic := '0';
    signal OneHzEn  : std_logic;

    -- Use the actual component but override COUNT_MAX inside architecture (for test only)
    component ClockDivider_1Hz is
        Port (
            Clk      : in  std_logic;
            Reset    : in  std_logic;
            OneHzEn  : out std_logic
        );
    end component;

    -- Reduced count clock divider for test (shortened simulation)
    constant Sim_COUNT_MAX : integer := 10;  -- ~10 cycles for short sim
    signal test_counter : unsigned(3 downto 0) := (others => '0');

begin

    -- Instantiate the Unit Under Test (UUT)
    uut: ClockDivider_1Hz
        port map (
            Clk      => Clk,
            Reset    => Reset,
            OneHzEn  => OneHzEn
        );

    -- Clock generation (period = 20 ns => 50 MHz)
    clock_gen: process
    begin
        while true loop
            Clk <= '0'; wait for 10 ns;
            Clk <= '1'; wait for 10 ns;
        end loop;
    end process;

    -- Test process
    stim_proc: process
    begin
        -- Assert Reset
        Reset <= '1';
        wait for 30 ns;
        Reset <= '0';

        -- Let the clock divider run and observe output
        wait for 500 ns;
        wait;
    end process;

end architecture test;

